Comment: >-
  A state machine that coordinates the remediation of security findings from GitHub Secret Scanning
StartAt: Pick Between Action Type
States:
  Pick Between Action Type:
    Type: Choice
    Choices:
      - Variable: "$.action"
        StringEquals: "created"
        Next: Get Secret Details
    Default: Success State
  Get Secret Details:
    Type: Task
    Resource: "${GetSecretDetailsFunctionArn}"
    TimeoutSeconds: 10
    HeartbeatSeconds: 30
    Retry:
      - ErrorEquals:
          - Lambda.ServiceException
          - Lambda.AWSLambdaException
          - Lambda.SdkClientException
          - States.Timeout
        IntervalSeconds: 2
        MaxAttempts: 3
        BackoffRate: 2
    Catch:
      - ErrorEquals:
          - States.ALL
        ResultPath: "$"
        Next: Process Error
    ResultPath: "$"
    Next: Find Secret Type To Remediate
  Find Secret Type To Remediate:
    Type: Choice
    Choices:
      - Variable: "$.alert.secret_type"
        StringEquals: "aws_access_key_id"
        Next: Remedaite AWS Access Key ID
    Default: Success State
  Remedaite AWS Access Key ID:
    Type: Task
    Resource: "${RemediateAWSAccessKeyFunctionArn}"
    TimeoutSeconds: 10
    HeartbeatSeconds: 30
    Retry:
      - ErrorEquals:
          - Lambda.ServiceException
          - Lambda.AWSLambdaException
          - Lambda.SdkClientException
          - States.Timeout
        IntervalSeconds: 2
        MaxAttempts: 3
        BackoffRate: 2
    Catch:
      - ErrorEquals:
          - States.ALL
        ResultPath: "$"
        Next: Process Error
    ResultPath: "$"
    Next: Success State
  Process Error:
    Type: Pass
    Parameters:
      Cause.$: States.StringToJson($.Cause)
    OutputPath: "$.Cause.errorMessage"
    Next: Fail State
  Success State:
    Type: Succeed
  Fail State:
    Type: Fail
